Stored Procedures â€“ SQL (MySQL)
ðŸ”¹ What is a Stored Procedure?
A Stored Procedure is a group of SQL statements stored in the database that can be executed repeatedly.

Think of it like a function in programming â€” you define it once and call it whenever needed.

ðŸ”¹ Why Use Stored Procedures?
- Reusability â€“ Define logic once, use many times
- Performance â€“ Runs faster as it's precompiled
- Security â€“ Can restrict direct access to data
- Modularity â€“ Makes code cleaner and organized


ðŸ”¹ Basic Syntax
DELIMITER //

CREATE PROCEDURE procedure_name()
BEGIN
   -- SQL statements
END //

DELIMITER ;


ðŸ”¹ What is DELIMITER and Why Use It?
Normally, SQL ends with ;, but inside a procedure you use many semicolons.
So we change the delimiter (end symbol) temporarily â€” e.g., from ; to // â€” so MySQL doesnâ€™t get confused.
Example:
DELIMITER //

CREATE PROCEDURE HelloWorld()
BEGIN
   SELECT 'Hello, World!';
END //

DELIMITER ;


ðŸ”¹ Calling a Stored Procedure
CALL HelloWorld();


ðŸ”¹ Parameters in Stored Procedures
You can pass parameters like in functions.
Types:
IN â€“ Pass a value into the procedure (default)
OUT â€“ Return a value from the procedure
INOUT â€“ Both input and output

ðŸ”¹ IN Parameter Example
DELIMITER //

CREATE PROCEDURE GetUserByID(IN userId INT)
BEGIN
   SELECT * FROM users WHERE id = userId;
END //

DELIMITER ;

CALL GetUserByID(1);


ðŸ”¹ OUT Parameter Example
DELIMITER //

CREATE PROCEDURE GetUserCount(OUT total INT)
BEGIN
   SELECT COUNT(*) INTO total FROM users;
END //

DELIMITER ;

-- Declare a variable to store the output
CALL GetUserCount(@count);
SELECT @count;


ðŸ”¹ INOUT Parameter Example
DELIMITER //

CREATE PROCEDURE DoubleValue(INOUT num INT)
BEGIN
   SET num = num * 2;
END //

DELIMITER ;

SET @x = 10;
CALL DoubleValue(@x);
SELECT @x;  -- Output: 20


ðŸ”¹ Viewing Stored Procedures
List all procedures:
SHOW PROCEDURE STATUS;

Filter by database:
SHOW PROCEDURE STATUS WHERE Db = 'your_database_name';


ðŸ”¹ See Procedure Code
SHOW CREATE PROCEDURE procedure_name;


ðŸ”¹ Drop/Delete a Procedure
DROP PROCEDURE procedure_name;


ðŸ”¹ Show all procedures:
SHOW PROCEDURE STATUS WHERE Db = 'your_db_name';
